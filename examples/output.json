{
  "metadata": {
    "timestamp": "2025-10-22T16:42:16Z",
    "config_file": ".replicated.yaml",
    "helm_version": "3.19.0",
    "preflight_version": "0.123.9",
    "support_bundle_version": "0.123.9",
    "cli_version": "v0.90.0"
  },
  "helm_results": {
    "enabled": true,
    "charts": [
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/helm-chart",
        "success": true,
        "messages": [
          {
            "severity": "INFO",
            "path": "Chart.yaml",
            "message": "icon is recommended"
          }
        ],
        "summary": {
          "error_count": 0,
          "warning_count": 0,
          "info_count": 1
        }
      }
    ]
  },
  "preflight_results": {
    "enabled": true,
    "specs": [
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/preflights/all-analyzers-v1beta2.yaml",
        "success": false,
        "messages": [
          {
            "severity": "ERROR",
            "path": "/Users/noah/replicatedhq/replicated/examples/preflights/all-analyzers-v1beta2.yaml",
            "message": "line 26: Unmatched template braces: 0 opening, 1 closing"
          },
          {
            "severity": "WARNING",
            "path": "/Users/noah/replicatedhq/replicated/examples/preflights/all-analyzers-v1beta2.yaml",
            "message": "line 5: Some analyzers and collectors are missing docString (recommended for v1beta3) (field: spec)"
          }
        ],
        "summary": {
          "error_count": 1,
          "warning_count": 1,
          "info_count": 0
        }
      },
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/preflights/complex-v1beta3.yaml",
        "success": true,
        "messages": [
          {
            "severity": "WARNING",
            "path": "/Users/noah/replicatedhq/replicated/examples/preflights/complex-v1beta3.yaml",
            "message": "line 1: Template values that must be provided at runtime: cephStatus.enabled, cephStatus.namespace, cephStatus.timeout, certificates.configMaps, certificates.enabled, certificates.secrets, clusterContainerStatuses.enabled, clusterContainerStatuses.namespaces, clusterContainerStatuses.restartCount, clusterPodStatuses.enabled, clusterPodStatuses.namespaces, clusterResource.clusterScoped, clusterResource.enabled, clusterResource.expectedValue, clusterResource.kind, clusterResource.name, clusterResource.namespace, clusterResource.regex, clusterResource.yamlPath, clusterVersion.enabled, clusterVersion.minVersion, clusterVersion.recommendedVersion, configMap.enabled, configMap.key, configMap.name, configMap.namespace, containerRuntime.enabled, crd.enabled, crd.name, databases.mssql.collectorName, databases.mssql.enabled, databases.mssql.uri, databases.mysql.collectorName, databases.mysql.enabled, databases.mysql.uri, databases.postgres.collectorName, databases.postgres.enabled, databases.postgres.tls, databases.postgres.tls.secret, databases.postgres.tls.secret.name, databases.postgres.tls.secret.namespace, databases.postgres.tls.skipVerify, databases.postgres.uri, databases.redis.collectorName, databases.redis.enabled, databases.redis.uri, distribution.enabled, distribution.supported, distribution.unsupported, event.collectorName, event.enabled, event.kind, event.namespace, event.reason, event.regex, goldpinger.collectDelay, goldpinger.collectorName, goldpinger.enabled, goldpinger.filePath, goldpinger.namespace, goldpinger.podLaunch, goldpinger.podLaunch.image, goldpinger.podLaunch.imagePullSecret, goldpinger.podLaunch.imagePullSecret.name, goldpinger.podLaunch.namespace, goldpinger.podLaunch.serviceAccountName, http.collectorName, http.enabled, http.get, http.get.headers, http.get.insecureSkipVerify, http.get.timeout, http.get.url, http.post, http.post.body, http.post.headers, http.post.insecureSkipVerify, http.post.timeout, http.post.url, imagePullSecret.enabled, imagePullSecret.registry, ingress.enabled, ingress.name, ingress.namespace, jsonCompare.enabled, jsonCompare.fileName, jsonCompare.jsonPath, jsonCompare.value, longhorn.enabled, longhorn.namespace, longhorn.timeout, nodeMetrics.collectorName, nodeMetrics.enabled, nodeMetrics.filters.pvc.nameRegex, nodeMetrics.filters.pvc.namespace, nodeMetrics.nodeNames, nodeMetrics.selector, nodeResources.count.enabled, nodeResources.count.min, nodeResources.count.recommended, nodeResources.cpu.enabled, nodeResources.cpu.min, nodeResources.ephemeral.enabled, nodeResources.ephemeral.minGi, nodeResources.ephemeral.recommendedGi, nodeResources.memory.enabled, nodeResources.memory.minGi, nodeResources.memory.recommendedGi, registryImages.collectorName, registryImages.enabled, registryImages.imagePullSecret, registryImages.imagePullSecret.data, registryImages.imagePullSecret.name, registryImages.images, registryImages.namespace, secret.enabled, secret.key, secret.name, secret.namespace, storageClass.className, storageClass.enabled, sysctl.enabled, sysctl.image, sysctl.imagePullPolicy, sysctl.namespace, textAnalyze.enabled, textAnalyze.fileName, textAnalyze.regex, velero.enabled, weaveReport.enabled, weaveReport.reportFileGlob, workloads.deployments.enabled, workloads.deployments.minReady, workloads.deployments.name, workloads.deployments.namespace, workloads.jobs.enabled, workloads.jobs.name, workloads.jobs.namespace, workloads.replicasets.enabled, workloads.replicasets.minReady, workloads.replicasets.name, workloads.replicasets.namespace, workloads.statefulsets.enabled, workloads.statefulsets.minReady, workloads.statefulsets.name, workloads.statefulsets.namespace, yamlCompare.enabled, yamlCompare.fileName, yamlCompare.path, yamlCompare.value (field: template-values)"
          }
        ],
        "summary": {
          "error_count": 0,
          "warning_count": 1,
          "info_count": 0
        }
      },
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/preflights/missing-metadata-v1beta3.yaml",
        "success": false,
        "messages": [
          {
            "severity": "ERROR",
            "path": "/Users/noah/replicatedhq/replicated/examples/preflights/missing-metadata-v1beta3.yaml",
            "message": "Missing 'metadata' section (field: metadata)"
          },
          {
            "severity": "WARNING",
            "path": "/Users/noah/replicatedhq/replicated/examples/preflights/missing-metadata-v1beta3.yaml",
            "message": "line 4: Some analyzers are missing docString (recommended for v1beta3) (field: spec.analyzers)"
          }
        ],
        "summary": {
          "error_count": 1,
          "warning_count": 1,
          "info_count": 0
        }
      }
    ]
  },
  "support_bundle_results": {
    "enabled": true,
    "specs": [
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/all-collectors.yaml",
        "success": true,
        "messages": [],
        "summary": {
          "error_count": 0,
          "warning_count": 0,
          "info_count": 0
        }
      },
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/all-kubernetes-collectors.yaml",
        "success": true,
        "messages": [
          {
            "severity": "WARNING",
            "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/all-kubernetes-collectors.yaml",
            "message": "line 6: Some collectors are missing docString (recommended for v1beta3) (field: spec.collectors)"
          }
        ],
        "summary": {
          "error_count": 0,
          "warning_count": 1,
          "info_count": 0
        }
      },
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/invalid-collectors-analyzers.yaml",
        "success": false,
        "messages": [
          {
            "severity": "ERROR",
            "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/invalid-collectors-analyzers.yaml",
            "message": "line 12: Expected 'hostCollectors' to be a list (field: spec.hostCollectors)"
          },
          {
            "severity": "WARNING",
            "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/invalid-collectors-analyzers.yaml",
            "message": "line 5: Some analyzers and collectors are missing docString (recommended for v1beta3) (field: spec)"
          }
        ],
        "summary": {
          "error_count": 1,
          "warning_count": 1,
          "info_count": 0
        }
      },
      {
        "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/support-bundle-no-collectors-v1beta3.yaml",
        "success": false,
        "messages": [
          {
            "severity": "ERROR",
            "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/support-bundle-no-collectors-v1beta3.yaml",
            "message": "line 5: SupportBundle spec must contain 'collectors' or 'hostCollectors' (field: spec.collectors)"
          },
          {
            "severity": "WARNING",
            "path": "/Users/noah/replicatedhq/replicated/examples/support-bundles/support-bundle-no-collectors-v1beta3.yaml",
            "message": "line 6: Some analyzers are missing docString (recommended for v1beta3) (field: spec.analyzers)"
          }
        ],
        "summary": {
          "error_count": 1,
          "warning_count": 1,
          "info_count": 0
        }
      }
    ]
  },
  "summary": {
    "total_resources": 8,
    "passed_resources": 4,
    "failed_resources": 4,
    "total_errors": 4,
    "total_warnings": 6,
    "total_info": 1,
    "overall_success": false
  }
}
